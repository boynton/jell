(define sort: sorted? (lambda (seq less?) (if (null? seq) true (if (vector? seq) ((lambda (n) (if (<= n 1) true ((lambda (system: loop) (set! system: loop (lambda (i) (if ((lambda (system: tmp) (if system: tmp system: tmp (less? (vector-ref seq (- i 1)) (vector-ref seq i)))) (= i n)) (= i n) (system: loop (+ i 1))))) (system: loop 1)) false))) (vector-length seq)) ((lambda (loop) (set! loop (lambda (last next) ((lambda (system: tmp) (if system: tmp system: tmp (if (not (less? (car next) last)) (loop (car next) (cdr next)) false))) (null? next)))) (loop (car seq) (cdr seq))) false)))))
